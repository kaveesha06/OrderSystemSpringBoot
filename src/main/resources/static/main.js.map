{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_model/AmendOrder.ts","webpack:///./src/app/_model/CancelOrder.ts","webpack:///./src/app/_model/OrdersPerTimeSlice.ts","webpack:///./src/app/_model/jms.ts","webpack:///./src/app/_model/orderParam.ts","webpack:///./src/app/_model/user.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/order-service.service.ts","webpack:///./src/app/_services/ordersper-time-slice.service.ts","webpack:///./src/app/_services/user-service.service.ts","webpack:///./src/app/amend/amend-order.service.ts","webpack:///./src/app/amend/amend.component.css","webpack:///./src/app/amend/amend.component.html","webpack:///./src/app/amend/amend.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/jms/jms.component.css","webpack:///./src/app/jms/jms.component.html","webpack:///./src/app/jms/jms.component.ts","webpack:///./src/app/jms/jms.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/params/params.component.css","webpack:///./src/app/params/params.component.html","webpack:///./src/app/params/params.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/response/response.component.css","webpack:///./src/app/response/response.component.html","webpack:///./src/app/response/response.component.ts","webpack:///./src/app/response/response.service.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class AmendOrder {\r\n  clOrdID :any;\r\n  orderQty :any;\r\n  price :any;\r\n}\r\n","export class CancelOrder {\r\n  clOrdID :any;\r\n\r\n}\r\n","export class OrdersPerTimeSlice {\r\n  orderPerSlice : number;\r\n  timePeriod : number;\r\n  GWClient : boolean;\r\n}\r\n","export class JMS {\n  jmsMessage : any;\n  exchange : any;\n}\n","export class OrderParam  {\n  orderChannel : any;\n  unReqId:any;\n  price :any;\n  tenantCode :any;\n   orderMode :any;\n  // clOrdID :any;\n  // origClOrdID :any;\n  // tradingAccountID :any;\n   type:any;\n  // quantity :any;\n  // customerID :any;\n   side :any;\n   exchange :any;\n  // cashAcntID :any;\n  // execBrokerID :any;\n   symbol :any;\n   marketCode :any;\n  // tIF :any;\n  // priceInstType :any;\n   dealerID :any;\n  // action :any;\n\n}\n","export class User {\n    ip:string;\n    port:number;\n    endpoint:number;\n    noOfOrders:number;\n    orderQty:number;\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthenticationService {\n  constructor() { }\n\n  authenticate(username, password) {\n    if ((username === \"user1\" && password === \"password\")|| (username === \"admin\" && password === \"mubasher\")) {\n      localStorage.setItem('username', username)\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isUserLoggedIn() {\n    let client = localStorage.getItem('username')\n   // console.log(!(client === null))\n    return !(client === null)\n  }\n\n  logOut() {\n    localStorage.removeItem('username')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { Observable } from 'rxjs';\nimport {OrderParam} from '../_model/orderParam';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderServiceService {\n\n  private usersUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.usersUrl = '/params';\n  }\n\n  public findAll(): Observable<OrderParam[]> {\n    return this.http.get<OrderParam[]>(this.usersUrl);\n  }\n\n  public save(orderParam: OrderParam) {\n    return this.http.post<OrderParam>(this.usersUrl, orderParam);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {OrdersPerTimeSlice} from '../_model/OrdersPerTimeSlice';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersperTimeSliceService {\n\n  private usersUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.usersUrl = '/ordersPerTimeSlice';\n  }\n\n  public findAll(): Observable<OrdersPerTimeSlice[]> {\n    return this.http.get<OrdersPerTimeSlice[]>(this.usersUrl);\n  }\n\n  public save(ordersPerTimeSlice:OrdersPerTimeSlice) {\n    return this.http.post<OrdersPerTimeSlice>(this.usersUrl, ordersPerTimeSlice);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { Observable } from 'rxjs';\nimport {User} from '../_model/user';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n\n\n@Injectable()\nexport class UserService {\n\n  private usersUrl: string;\n\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.usersUrl = '/users';\n  }\n\n  public findAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl);\n  }\n\n  public save(user: User) {\n    return this.http.post<User>(this.usersUrl, user);\n  }\n  public gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {AmendOrder} from '../_model/AmendOrder';\nimport {CancelOrder} from '../_model/CancelOrder';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AmendOrderService {\n  private amendOrdersUrl : string;\n  private cancelOrdersURL : string;\n  constructor(private http: HttpClient, private router: Router) {\n    this.amendOrdersUrl = '/amendOrder';\n    this.cancelOrdersURL = '/cancelOrder';\n  }\n\n  public save(amendOrder: AmendOrder) {\n    return this.http.post<AmendOrder>(this.amendOrdersUrl, amendOrder);\n  }\n  public saveCancel(cancelOrder: CancelOrder) {\n    return this.http.post<CancelOrder>(this.cancelOrdersURL, cancelOrder);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYW1lbmQvYW1lbmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--<app-websocket></app-websocket>-->\\n<header class=\\\"header\\\">\\n  <nav class=\\\"navbar navbar-expand-lg\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center justify-content-between\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <!-- Navbar Header--><a href=\\\"index.html\\\" class=\\\"navbar-brand\\\">\\n        <div class=\\\"brand-text brand-big visible text-uppercase\\\"><strong class=\\\"text-primary\\\">Order </strong><strong>system</strong></div>\\n        <div class=\\\"brand-text brand-sm\\\"><strong class=\\\"text-primary\\\">D</strong><strong>A</strong></div></a>\\n        <!-- Sidebar Toggle Btn-->\\n\\n\\n\\n\\n\\n        <button class=\\\"sidebar-toggle\\\"><i class=\\\"fa fa-long-arrow-left\\\"></i></button>\\n      </div>\\n    </div>\\n    <!--<div class=\\\"list-inline-item logout\\\"> <a *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\"> Login </a> </div>-->\\n    <!--<div class=\\\"list-inline-item logout\\\"><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">LogOut</a></div>-->\\n  </nav>\\n</header>\\n<div class=\\\"d-flex align-items-stretch\\\" >\\n  <nav id=\\\"sidebar\\\" >\\n    <!-- Sidebar Header-->\\n\\n    <!-- Sidebar Navidation Menus-->\\n    <ul class=\\\"list-unstyled\\\">\\n      <li><a routerLink=\\\"/users\\\">Create Orders </a></li>\\n      <li><a  routerLink=\\\"/Amend\\\"> Amend/Cancel Orders </a></li>\\n      <!--<li><a href=\\\"charts.html\\\">Cancel Orders </a></li>-->\\n      <li><a routerLink=\\\"/JMS\\\"> JMS Send</a></li>\\n      <!--<li><a href=\\\"forms.html\\\"> amendOrder List </a></li>-->\\n\\n    </ul>\\n  </nav>\\n  <div class=\\\"page-content\\\">\\n    <div class=\\\"page-header\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <h2 class=\\\"h5 no-margin-bottom\\\">Dashboard</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card my-5\\\">\\n          <div class=\\\"card-body\\\">\\n            <h2>Amend Order</h2><br>\\n            <form (ngSubmit)=\\\"onSubmit()\\\" #amendOrderForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"clOrdID\\\" class=\\\"col-sm-3 form-control-label\\\">ClOrderID</label>\\n                  <!--<label for=\\\"orderChannel\\\"></label>-->\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"amendOrder && amendOrder.clOrdID\\\" class=\\\"form-control\\\" id=\\\"clOrdID\\\"  name =\\\"clOrdID\\\"\\n                           #clOrdID=\\\"ngModel\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"orderQty\\\" class=\\\"col-sm-3 form-control-label\\\">Order Quantity</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"number\\\" [(ngModel)]=\\\"amendOrder && amendOrder.orderQty\\\" class=\\\"form-control\\\" id=\\\"orderQty\\\"  name=\\\"orderQty\\\"\\n                           required #orderQty=\\\"ngModel\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"price\\\" class=\\\"col-sm-3 form-control-label\\\">Price</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"amendOrder && amendOrder.price\\\" class=\\\"form-control\\\" id=\\\"price\\\"  name=\\\"price\\\"\\n                           required #price=\\\"ngModel\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"!amendOrderForm.form.valid\\\" (click) =\\\"order()\\\" class=\\\"btn btn-info\\\">Configure</button>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n\\n\\n\\n        <div class=\\\"card my-5\\\">\\n          <div class=\\\"card-body\\\">\\n            <h2>Cancel Order</h2><br>\\n            <form (ngSubmit)=\\\"onCancel()\\\" #cancelOrderForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"clOrdID\\\" class=\\\"col-sm-3 form-control-label\\\">ClOrderID</label>\\n                  <!--<label for=\\\"orderChannel\\\"></label>-->\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"cancelOrder && cancelOrder.clOrdID\\\" class=\\\"form-control\\\" id=\\\"cancelOrder\\\"  name =\\\"clOrdID\\\"\\n                           #clOrdID=\\\"ngModel\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"!cancelOrderForm.form.valid\\\" (click) =\\\"order()\\\" class=\\\"btn btn-info\\\">Configure</button>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n\\n\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <br><br>\\n        <div class=\\\"statistic-block block\\\">\\n          <div class=\\\"progress-details d-flex align-items-end justify-content-between\\\">\\n            <div class=\\\"title\\\">\\n              <!-- <div class=\\\"icon\\\"><i class=\\\"icon-user-1\\\"></i></div> -->\\n              <strong>Responses</strong>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <!--<div id=\\\"scroll\\\" style=\\\"overflow-y:scroll; height:400px;\\\">-->\\n        <div id=\\\"scroll\\\" style=\\\"overflow-y:scroll; height:400px;\\\">\\n          <p-table [value]=\\\"messages\\\" >\\n\\n            <ng-template pTemplate=\\\"header\\\">\\n              <tr>\\n                <!--<th>Response</th>-->\\n              </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-message>\\n              <tr>\\n                <td>{{message}}</td>\\n              </tr>\\n            </ng-template>\\n          </p-table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AmendOrder} from '../_model/AmendOrder';\nimport {AmendOrderService} from './amend-order.service';\nimport {Router} from '@angular/router';\nimport {ResponseService} from '../response/response.service';\nimport {Subscription, timer} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport {CancelOrder} from '../_model/CancelOrder';\n\n@Component({\n  selector: 'app-amend',\n  templateUrl: './amend.component.html',\n  styleUrls: ['./amend.component.css']\n})\nexport class AmendComponent implements OnInit {\n  amendOrder : AmendOrder;\n  cancelOrder : CancelOrder;\n  messages =[];\n  subscription2: Subscription;\n  constructor(private amendOrderService:AmendOrderService, private router: Router, private responseService: ResponseService) {\n    this.amendOrder = new AmendOrder();\n    this.cancelOrder = new CancelOrder();\n  }\n\n  ngOnInit() {\n  }\n  onSubmit= function(){\n    this.amendOrderService.save(this.amendOrder).subscribe(result => this.gotoUserList());\n  }\n  onCancel= function(){\n    this.amendOrderService.saveCancel(this.cancelOrder).subscribe(result => this.gotoUserList());\n  }\n  gotoUserList() {\n    this.router.navigate(['/Amend']);\n  }\n\n  order(){\n    this.responseService.order().subscribe(params => {\n\n\n    });\n    this.subscription2 = timer(0, 1000).pipe(\n      switchMap(() => this.responseService.getLastHundredResponses())\n    ).subscribe( data =>{\n      this.messages =[];\n      for(let i=0;i< 50;i++){\n        this.messages.push(data[i]);\n      }\n    });\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport {LoginComponent} from './login/login.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LogoutComponent} from './logout/logout.component';\nimport {ParamsComponent} from './params/params.component';\nimport {JMSComponent} from './jms/jms.component';\nimport {AmendComponent} from './amend/amend.component';\n \nconst routes: Routes = [\n  { path: 'users', component: DashboardComponent },\n  { path: 'start', component: UserFormComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'params', component: ParamsComponent },\n  { path: 'JMS', component: JMSComponent },\n  { path: 'Amend', component: AmendComponent },\n\n];\n \n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\n\\r\\n.card bg-dark my-5{\\r\\n    padding: 0px;\\r\\n}.card-body{\\r\\n    padding-top: 0px;\\r\\n}.row{\\r\\n    padding-top: 0px;\\r\\n}.page-header{\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBO0lBQ0ksWUFBWTtBQUNoQixDQUFDO0lBQ0csZ0JBQWdCO0FBQ3BCLENBQUM7SUFDRyxnQkFBZ0I7QUFDcEIsQ0FBQztJQUNHLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbi5jYXJkIGJnLWRhcmsgbXktNXtcclxuICAgIHBhZGRpbmc6IDBweDtcclxufS5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nLXRvcDogMHB4O1xyXG59LnJvd3tcclxuICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbn0ucGFnZS1oZWFkZXJ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport {ResponseService} from './response/response.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'ang-app';\n  constructor(private responseService:ResponseService) {\n    this.responseService.connect().subscribe();\n  }\n\n  /** async getLastThousandResponses(){\n  while(1){\n    let size =this.queue.length;\n   \n    if(size>1000){\n      let start =size - 1000;\n      for(var i=0;i<=1000;i++){\n        this.modifiedQueue.push(this.queue[start+i]);\n      }\n     \n    }\n    delay(1000);\n  }\n}*/\n  // sendMessage(message){\n  //   this.stompClient.send(\"/app/send/message\" , {}, message);\n  //   $('#input').val('');\n  // }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {TableModule} from 'primeng/table';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from './_services/user-service.service';\nimport { ResponseComponent } from './response/response.component';\nimport { VirtualScrollModule } from 'angular2-virtual-scroll';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ParamsComponent } from './params/params.component';\nimport { JMSComponent } from './jms/jms.component';\nimport { AmendComponent } from './amend/amend.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserFormComponent,\n    ResponseComponent,\n    LoginComponent,\n    DashboardComponent,\n    RegisterComponent,\n    LogoutComponent,\n    ParamsComponent,\n    JMSComponent,\n    AmendComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    VirtualScrollModule,\n    ScrollingModule,\n    InfiniteScrollModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FileUploadModule,\n    TableModule\n   \n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n \n  \n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--<app-websocket></app-websocket>-->\\n<header class=\\\"header\\\">\\n  <nav class=\\\"navbar navbar-expand-lg\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center justify-content-between\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <!-- Navbar Header--><a href=\\\"index.html\\\" class=\\\"navbar-brand\\\">\\n        <div class=\\\"brand-text brand-big visible text-uppercase\\\"><strong class=\\\"text-primary\\\">Order </strong><strong>system</strong></div>\\n        <div class=\\\"brand-text brand-sm\\\"><strong class=\\\"text-primary\\\">D</strong><strong>A</strong></div></a>\\n        <!-- Sidebar Toggle Btn-->\\n\\n\\n\\n\\n\\n        <button class=\\\"sidebar-toggle\\\"><i class=\\\"fa fa-long-arrow-left\\\"></i></button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-inline-item logout\\\"> <a *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\"> Login </a> </div>\\n    <div class=\\\"list-inline-item logout\\\"><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">LogOut</a></div>\\n  </nav>\\n</header>\\n<div class=\\\"d-flex align-items-stretch\\\" >\\n  <nav id=\\\"sidebar\\\" >\\n    <!-- Sidebar Header-->\\n\\n    <!-- Sidebar Navidation Menus-->\\n    <ul class=\\\"list-unstyled\\\">\\n      <li><a routerLink=\\\"/users\\\">Create Orders </a></li>\\n      <li><a  routerLink=\\\"/Amend\\\"> Amend/Cancel Orders </a></li>\\n      <li><a routerLink=\\\"/JMS\\\"> JMS Send</a></li>\\n    </ul>\\n  </nav>\\n  <div class=\\\"page-content\\\">\\n    <div class=\\\"page-header\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <h2 class=\\\"h5 no-margin-bottom\\\">Dashboard</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <app-user-form></app-user-form>\\n        <app-params></app-params>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card-body\\\">\\n              <app-response></app-response>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from '../_services/authentication.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private loginService:AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvam1zL2ptcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--<app-websocket></app-websocket>-->\\n<header class=\\\"header\\\">\\n  <nav class=\\\"navbar navbar-expand-lg\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center justify-content-between\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <!-- Navbar Header--><a href=\\\"index.html\\\" class=\\\"navbar-brand\\\">\\n        <div class=\\\"brand-text brand-big visible text-uppercase\\\"><strong class=\\\"text-primary\\\">Order </strong><strong>system</strong></div>\\n        <div class=\\\"brand-text brand-sm\\\"><strong class=\\\"text-primary\\\">D</strong><strong>A</strong></div></a>\\n        <!-- Sidebar Toggle Btn-->\\n        <button class=\\\"sidebar-toggle\\\"><i class=\\\"fa fa-long-arrow-left\\\"></i></button>\\n      </div>\\n    </div>\\n    <!--<div class=\\\"list-inline-item logout\\\"> <a *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\"> Login </a> </div>-->\\n    <!--<div class=\\\"list-inline-item logout\\\"><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">LogOut</a></div>-->\\n  </nav>\\n</header>\\n<div class=\\\"d-flex align-items-stretch\\\" >\\n  <nav id=\\\"sidebar\\\" >\\n    <!-- Sidebar Header-->\\n    <!-- Sidebar Navidation Menus-->\\n    <ul class=\\\"list-unstyled\\\">\\n      <li><a  routerLink=\\\"/users\\\">Create Orders </a></li>\\n      <li><a  routerLink=\\\"/Amend\\\"> Amend/Cancel Orders </a></li>\\n      <li><a routerLink=\\\"/JMS\\\"> JMS Send</a></li>\\n      <!--<li><a href=\\\"forms.html\\\"> OrderParam List </a></li>-->\\n    </ul>\\n  </nav>\\n  <div class=\\\"page-content\\\">\\n    <div class=\\\"page-header\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <h2 class=\\\"h5 no-margin-bottom\\\">Dashboard</h2>\\n      </div>\\n    </div>\\n\\n    <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #jmsForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" >\\n        <div> <br>\\n        <select id=\\\"select-type-basic\\\" [(ngModel)]=\\\"jms && jms.exchange\\\" name = \\\"exchange\\\" [value]= exchange_values[0] >\\n          <option *ngFor=\\\"let exchange_type of exchange_values\\\">\\n            {{exchange_type}}\\n          </option>\\n        </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-sm-9\\\">\\n            <label for=\\\"jmsMessage\\\" class=\\\"col-sm-3 form-control-label\\\"></label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"jms && jms.jmsMessage\\\" class=\\\"form-control\\\" name =\\\"jmsMessage\\\" id=\\\"jmsMessage\\\" #jmsMessage=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Send JMS</button>&nbsp;&nbsp;\\n        <button (click)=\\\"clear()\\\" class=\\\"btn btn-secondary\\\">Clear</button>\\n      </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {JmsService} from './jms.service';\nimport {JMS} from '../_model/jms';\nimport {FileUploader} from 'ng2-file-upload';\n\n\n@Component({\n  selector: 'app-jms',\n  templateUrl: './jms.component.html',\n  styleUrls: ['./jms.component.css']\n})\nexport class JMSComponent implements OnInit {\n  jms:JMS;\n  uploader: FileUploader;\n  selectedOption: any = \"FormExchange\";\n  exchange_values: any = [\"FromExchange\",\"ToExchange\"];\n\n  constructor(private route: ActivatedRoute, private router: Router, private jmsService:JmsService) {\n    this.jms = new JMS();\n    this.jms.jmsMessage = \"TDWL\\u001C0\\u001C23041\\u001C8=FIXT.1.1\\u00019=115\\u000135=U29\\u000134=316\\u000152=20171228-08:06:49.594\\u000149=998\\u000156=080\\u000157=M0800001\\u00019742=U2815360521\\u00019730=0\\u00019701=180904000000263\\u00019729=1365245876\\u0001900=5\\u000110=124\\u0001\";\n    this.jms.exchange = \"FromExchange\";\n  }\n\n  ngOnInit(): void {\n    const headers = [{name: 'Accept', value: 'application/json'}];\n    this.uploader = new FileUploader({url: '/api/files/jms', autoUpload: true, headers: headers});\n    this.uploader.onCompleteAll = () => alert('File uploaded');\n  }\n\n  onSubmit= function(){\n    this.jmsService.save(this.jms).subscribe(result => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/JMS']);\n  }\n\n  clear(){\n    this.jms.jmsMessage = null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {OrderParam} from '../_model/orderParam';\nimport {JMS} from '../_model/jms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JmsService {\n\n  private usersUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.usersUrl = '/jmsSend';\n  }\n\n  public findAll(): Observable<JMS[]> {\n    return this.http.get<JMS[]>(this.usersUrl);\n  }\n\n  public save(jms:JMS) {\n    return this.http.post<JMS>(this.usersUrl, jms);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"login-page\\\">\\n  <div class=\\\"container d-flex align-items-center\\\">\\n    <div class=\\\"form-holder has-shadow\\\">\\n      <div class=\\\"row\\\">\\n        <!-- Logo & Information Panel-->\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"info d-flex align-items-center\\\">\\n            <div class=\\\"content\\\">\\n              <div class=\\\"logo\\\">\\n                <h1>Test Client Order System</h1>\\n              </div>\\n              <!--<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>-->\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Form Panel    -->\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form d-flex align-items-center\\\">\\n            <div class=\\\"content\\\">\\n              <form method=\\\"get\\\" class=\\\"form-validate mb-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input id=\\\"login-username\\\" type=\\\"text\\\" name=\\\"username\\\" required data-msg=\\\"Please enter your username\\\" class=\\\"input-material\\\" [(ngModel)]=\\\"username\\\"/>\\n                  <label for=\\\"login-username\\\" class=\\\"label-material\\\"></label>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input id=\\\"login-password\\\" type=\\\"password\\\" name=\\\"password\\\" required data-msg=\\\"Please enter your password\\\" class=\\\"input-material\\\" [(ngModel)]=\\\"password\\\">\\n                  <label for=\\\"login-password\\\" class=\\\"label-material\\\"></label>\\n                </div>\\n                <button type=\\\"submit\\\" (click)=checkLogin() class=\\\"btn btn-primary\\\">Login</button>\\n              </form><a href=\\\"#\\\" class=\\\"forgot-pass\\\">Forgot Password?</a><br><small>Do not have an account? </small><a href=\\\"/register\\\" class=\\\"signup\\\">Signup</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username : any ;\n  password ='';\n  invalidLogin = false\n\n  constructor(private router: Router,\n              private loginservice: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  checkLogin() {\n    if (this.loginservice.authenticate(this.username, this.password)\n    ) {\n      this.router.navigate(['/users'])\n      this.invalidLogin = false\n    } else\n      this.invalidLogin = true\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbG9nb3V0L2xvZ291dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authentocationService: AuthenticationService,\n    private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.authentocationService.logOut();\n    this.router.navigate(['login']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcGFyYW1zL3BhcmFtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"card my-5\\\">\\n  <div class=\\\"card-body\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #orderParamForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"orderChannel\\\" class=\\\"col-sm-3 form-control-label\\\">Order Channel</label>\\n          <!--<label for=\\\"orderChannel\\\"></label>-->\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.orderChannel\\\" class=\\\"form-control\\\" id=\\\"orderChannel\\\"  name =\\\"orderChannel\\\" (change)=\\\"onSubmit()\\\"\\n                   #orderChannel=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n        <label for=\\\"price\\\" class=\\\"col-sm-3 form-control-label\\\">Price</label>\\n          <div class=\\\"col-sm-9\\\">\\n           <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.price\\\" class=\\\"form-control\\\" id=\\\"price\\\"  name=\\\"price\\\" (change)=\\\"onSubmit()\\\"\\n               required #stringPrice=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"type\\\" class=\\\"col-sm-3 form-control-label\\\">Type</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.type\\\" class=\\\"form-control\\\" id=\\\"type\\\"  name=\\\"type\\\" (change)=\\\"onSubmit()\\\"\\n                   required #type=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"symbol\\\" class=\\\"col-sm-3 form-control-label\\\">Symbol</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.symbol\\\" class=\\\"form-control\\\" id=\\\"symbol\\\"  name=\\\"symbol\\\" (change)=\\\"onSubmit()\\\"\\n                   required #symbol=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"tenantCode\\\" class=\\\"col-sm-3 form-control-label\\\">Tenant Code</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.tenantCode\\\" class=\\\"form-control\\\" id=\\\"tenantCode\\\"  name=\\\"tenantCode\\\" (change)=\\\"onSubmit()\\\"\\n                   required #tenantCode=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"marketCode\\\" class=\\\"col-sm-3 form-control-label\\\">Market Code</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.marketCode\\\" class=\\\"form-control\\\" id=\\\"marketCode\\\"  name=\\\"marketCode\\\" (change)=\\\"onSubmit()\\\"\\n                   required #marketCode=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"exchange\\\" class=\\\"col-sm-3 form-control-label\\\">Exchange</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.exchange\\\" class=\\\"form-control\\\" id=\\\"exchange\\\"  name=\\\"exchange\\\" (change)=\\\"onSubmit()\\\"\\n                   required #exchange=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"side\\\" class=\\\"col-sm-3 form-control-label\\\">Side</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"orderParam && orderParam.side\\\" class=\\\"form-control\\\" id=\\\"side\\\"  name=\\\"side\\\" (change)=\\\"onSubmit()\\\"\\n                   required #side=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"orderMode\\\" class=\\\"col-sm-3 form-control-label\\\">Order Mode</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"orderParam && orderParam.orderMode\\\" class=\\\"form-control\\\" id=\\\"orderMode\\\"  name=\\\"orderMode\\\" (change)=\\\"onSubmit()\\\"\\n                   required #orderMode=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"dealerID\\\" class=\\\"col-sm-3 form-control-label\\\">Dealer ID</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.dealerID\\\" class=\\\"form-control\\\" id=\\\"dealerID\\\"  name=\\\"dealerID\\\" (change)=\\\"onSubmit()\\\"\\n                   required #dealerID=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n\\n          <button type=\\\"submit\\\" [disabled]=\\\"!orderParamForm.form.valid\\\" class=\\\"btn btn-info\\\">Configure</button>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n\\n\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {OrderParam} from '../_model/orderParam';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OrderServiceService} from '../_services/order-service.service';\n\n@Component({\n  selector: 'app-params',\n  templateUrl: './params.component.html',\n  styleUrls: ['./params.component.css']\n})\nexport class ParamsComponent implements OnInit {\n  orderParam : OrderParam ;\n\n  constructor(private route: ActivatedRoute, private router: Router, private orderService: OrderServiceService) {\n    this.orderParam = new OrderParam();\n    //this.orderParam.unReqId = 1011;\n\n    this.orderParam.tenantCode =\"DEFAULT_TENANT\";\n    this.orderParam.symbol = \"1010\";\n    this.orderParam.exchange ='TDWL';\n    this.orderParam.price = 5.0;\n    this.orderParam.orderChannel =12;\n    this.orderParam.marketCode = \"ALL\";\n    this.orderParam.type =2;\n    this.orderParam.side = 1;\n    this.orderParam.orderMode = 0;\n    this.orderParam.dealerID ='1';\n  }\n\n  ngOnInit() {\n    this.onSubmit();\n  }\n  onSubmit= function(){\n    this.orderService.save(this.orderParam).subscribe(result => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  register works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body {\\r\\n    margin: 0;\\r\\n    font-size: 28px;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n  }\\r\\n  \\r\\n  .header {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    z-index: 1;\\r\\n    width: 100%;\\r\\n    background-color: #f1f1f1;\\r\\n  }\\r\\n  \\r\\n  .header h2 {\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .progress-container {\\r\\n    width: 100%;\\r\\n    height: 8px;\\r\\n    background: #ccc;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  .progress-bar {\\r\\n    height: 8px;\\r\\n    background: #4caf50;\\r\\n    width: 0%;\\r\\n  }\\r\\n  \\r\\n  .content {\\r\\n    padding: 100px 0;\\r\\n    margin: 50px auto 0 auto;\\r\\n    width: 80%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9yZXNwb25zZS9yZXNwb25zZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztJQUNULGVBQWU7SUFDZix5Q0FBeUM7RUFDM0M7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsTUFBTTtJQUNOLFVBQVU7SUFDVixXQUFXO0lBQ1gseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFdBQVc7SUFDWCxnQkFBZ0I7O0VBRWxCOztFQUVBO0lBQ0UsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsd0JBQXdCO0lBQ3hCLFVBQVU7RUFDWiIsImZpbGUiOiJhcHAvcmVzcG9uc2UvcmVzcG9uc2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgfVxyXG4gIFxyXG4gIC5oZWFkZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRlciBoMiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5wcm9ncmVzcy1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJhY2tncm91bmQ6ICNjY2M7XHJcbiAgICBcclxuICB9XHJcbiAgXHJcbiAgLnByb2dyZXNzLWJhciB7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJhY2tncm91bmQ6ICM0Y2FmNTA7XHJcbiAgICB3aWR0aDogMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5jb250ZW50IHtcclxuICAgIHBhZGRpbmc6IDEwMHB4IDA7XHJcbiAgICBtYXJnaW46IDUwcHggYXV0byAwIGF1dG87XHJcbiAgICB3aWR0aDogODAlO1xyXG4gIH0iXX0= */\"","module.exports = \"<br>\\n<div class=\\\"stats-3-block block d-flex\\\">\\n        <div class=\\\"stats-3\\\"><strong class=\\\"d-block\\\">{{this.totalNoOfOrders}}</strong><span class=\\\"d-block\\\">Total Requests</span>\\n          <!-- <div class=\\\"progress progress-template progress-small\\\">\\n            <div role=\\\"progressbar\\\" style=\\\"width: 35%;\\\" aria-valuenow=\\\"30\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" class=\\\"progress-bar progress-bar-template progress-bar-small dashbg-1\\\"></div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"stats-3 d-flex justify-content-between text-center\\\">\\n          <div class=\\\"item\\\"><strong class=\\\"d-block strong-sm\\\">{{this.responseTime}}</strong><span class=\\\"d-block span-sm\\\">Time(s)</span>\\n            <!-- <div class=\\\"line\\\"></div><small>+246</small> -->\\n          </div>\\n          <div class=\\\"item\\\"><strong class=\\\"d-block strong-sm\\\">{{this.totalNoOfOrders-this.responseCount}}</strong><span class=\\\"d-block span-sm\\\">Pending</span>\\n            <!-- <div class=\\\"line\\\"></div><small>+416</small> -->\\n          </div>\\n        </div>\\n      </div>\\n\\n<div class=\\\"statistic-block block\\\">\\n    <div class=\\\"progress-details d-flex align-items-end justify-content-between\\\">\\n      <div class=\\\"title\\\">\\n        <!-- <div class=\\\"icon\\\"><i class=\\\"icon-user-1\\\"></i></div> -->\\n        <strong>Responses</strong>\\n      </div>\\n      <div class=\\\"number dashtext-1\\\">{{this.responseCount}}</div>\\n    </div>\\n    <div class=\\\"progress progress-template\\\">\\n        <div role=\\\"progressbar\\\" [style.width]=\\\"this.percentage + '%'\\\" aria-valuenow=\\\"55\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" class=\\\"progress-bar progress-bar-template dashbg-3\\\"></div>\\n    </div>\\n  </div>\\n<button type=\\\"submit\\\" value=\\\"Click\\\" class=\\\"btn btn-info\\\" (click) =\\\"connect()\\\">Reconnect</button>&nbsp;&nbsp;\\n<button type=\\\"submit\\\" value=\\\"Click\\\" class=\\\"btn btn-info\\\" (click) =\\\"order()\\\">Place Order</button>&nbsp;&nbsp;\\n<button type=\\\"submit\\\" value=\\\"Click\\\" class=\\\"btn btn-info\\\" (click) =\\\"clear()\\\">Clear</button>\\n<div><br></div>\\n\\n<div id=\\\"scroll\\\" style=\\\"overflow-y:scroll; height:400px;\\\">\\n<p-table [value]=\\\"messages\\\" >\\n\\n    <ng-template pTemplate=\\\"header\\\">\\n      <tr>\\n        <th>Response</th>\\n      </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-message>\\n      <tr>\\n        <td>{{message}}</td>\\n      </tr>\\n    </ng-template>\\n\\n  </p-table>\\n</div>\\n\"","import { AppComponent } from '../app.component';\nimport {Component, OnInit, Directive, Input, ViewChild} from '@angular/core';\nimport { ResponseService } from './response.service';\nimport { timer, Observable, Subject,Subscription,pipe } from 'rxjs';\nimport { switchMap, takeUntil, catchError } from 'rxjs/operators';\nimport { User } from '../_model/user';\nimport { UserService } from '../_services/user-service.service';\n\n@Component({\n  selector: 'app-response',\n  templateUrl: './response.component.html',\n  styleUrls: ['./response.component.css']\n})\nexport class ResponseComponent implements OnInit {\n  user : User;\n  users: User[];\n  subscription1: Subscription;\n  subscription2: Subscription;\n  subscription3: Subscription;\n  statusText: string;\n  responseCount : number;\n  responseTime : any;\n  totalNoOfOrders : number;\n  percentage : any;\n  messages =[];\n  responseCountArray = [];\n  columnDefs = [\n    {headerName: 'Response', field: 'response'}\n    \n  ];\n  \n  rowData : any;\n  private fetchData$: Observable<string> = this.responseService.getReponseCount();\n  \n  constructor(private responseService:ResponseService,private userService: UserService) {\n    //this.getResponseCount();\n    this.user = new User();\n\n  }\n\n  ngOnInit() {\n    this.responseCountArray =[];\n    this.responseCount = 0;\n    this.responseTime = 0;\n    this.totalNoOfOrders  = 0;\n    this.userService.findAll().subscribe(data => {\n      this.users = data;\n\n      this.totalNoOfOrders = this.users[this.users.length-1].noOfOrders;\n\n    });\n    this.subscription1 = timer(0, 200).pipe(\n      switchMap(() => this.responseService.getReponseCount())\n    ).subscribe( data =>{\n      this.responseCount = data;\n      this.percentage = (this.responseCount / this.totalNoOfOrders)*100;\n      if(this.responseCountArray.length < 12){\n        this.responseCountArray.push(this.responseCount);\n      }\n      else{\n        this.responseCountArray.splice(0,1);\n        this.responseCountArray.push(this.responseCount);\n      }\n      if(this.responseCountArray[0] == this.responseCountArray[10] || this.responseCountArray[10] == this.totalNoOfOrders){\n\n        // this.subscription1.unsubscribe();\n        // this.subscription2.unsubscribe();\n        // this.subscription3.unsubscribe();\n      }\n    });\n\n    this.subscription2 = timer(0, 1000).pipe(\n      switchMap(() => this.responseService.getLastHundredResponses())\n    ).subscribe( data =>{\n\n      this.messages =[];\n      for(let i=0;i< 50;i++){\n        this.messages.push(data[i]);\n      }\n\n    });\n\n    this.subscription3 = timer(0, 1000).pipe(\n      switchMap(() => this.responseService.getReponseTime())\n    ).subscribe( data =>{\n      if(this.responseCount == 0){\n        this.responseTime = 0;\n      }\n      this.responseTime = data[this.responseCount-1]/1000;\n    });\n\n\n  }\n\n  \n\n  order() {\n\n    this.responseCountArray =[];\n    this.responseCount = 0;\n    this.responseTime = 0;\n    this.userService.findAll().subscribe(data => {\n      this.users = data;\n      \n      this.totalNoOfOrders = this.users[this.users.length-1].noOfOrders;\n\n    });\n    this.responseService.order().subscribe(params => {\n      \n      // this.populateRowData();\n    });\n    this.subscription1 = timer(0, 200).pipe(\n      switchMap(() => this.responseService.getReponseCount())\n    ).subscribe( data =>{\n      this.responseCount = data;\n      this.percentage = (this.responseCount / this.totalNoOfOrders)*100;\n      if(this.responseCountArray.length < 12){\n        this.responseCountArray.push(this.responseCount);\n      }\n      else{\n        this.responseCountArray.splice(0,1);\n        this.responseCountArray.push(this.responseCount);\n      }\n     if(this.responseCountArray[0] == this.responseCountArray[10] || this.responseCountArray[10] == this.totalNoOfOrders){\n\n      // this.subscription1.unsubscribe();\n      // this.subscription2.unsubscribe();\n      // this.subscription3.unsubscribe();\n      }\n    });\n\n    this.subscription2 = timer(0, 1000).pipe(\n      switchMap(() => this.responseService.getLastHundredResponses())\n    ).subscribe( data =>{\n\n      this.messages =[];\n      for(let i=0;i< 50;i++){\n        this.messages.push(data[i]);\n      }\n\n    });\n\n    this.subscription3 = timer(0, 1000).pipe(\n      switchMap(() => this.responseService.getReponseTime())\n    ).subscribe( data =>{\n      if(this.responseCount == 0){\n        this.responseTime = 0;\n      }\n      this.responseTime = data[this.responseCount-1]/1000;\n      });\n    }\n\n\n    clear(){\n    this.messages = null;\n    this.subscription2.unsubscribe();\n  }\n\n  connect(){\n    this.responseService.connect().subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable,interval,Subscription} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponseService {\n  subscription: Subscription;\n \n  constructor(private  http: HttpClient) { \n    const source = interval(1000);\n  }\n\n   getReponseCount(): Observable <any> {\n    return this.http.get('/ResponseCount');\n  }\n\n  getReponseTime(): Observable <any> {\n    return this.http.get('/ResponseTime');\n }\n   \n  order(): Observable <any> {\n    return this.http.get('/startOrder');\n  }\n\n  getLastHundredResponses(): Observable <any> {\n    return this.http.get('/ResponseData');\n }\n\n connect(): Observable <any> {\n    return this.http.get('/connect');\n  }\n\n\n\n}\n","module.exports = \"form{\\r\\n    padding-top: 0px;\\r\\n   \\r\\n    \\r\\n}\\r\\n.card bg-dark my-5{\\r\\n    padding: 0px;\\r\\n    \\r\\n}\\r\\n.card-body{\\r\\n    padding-top: 0px;\\r\\n   \\r\\n}\\r\\ninput[type=checkbox] {\\r\\n  -webkit-transform: scale(1.5);\\r\\n          transform: scale(1.5);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC91c2VyLWZvcm0vdXNlci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7OztBQUdwQjtBQUNBO0lBQ0ksWUFBWTs7QUFFaEI7QUFBQztJQUNHLGdCQUFnQjs7QUFFcEI7QUFDQTtFQUNFLDZCQUFxQjtVQUFyQixxQkFBcUI7QUFDdkIiLCJmaWxlIjoiYXBwL3VzZXItZm9ybS91c2VyLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm17XHJcbiAgICBwYWRkaW5nLXRvcDogMHB4O1xyXG4gICBcclxuICAgIFxyXG59XHJcbi5jYXJkIGJnLWRhcmsgbXktNXtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIFxyXG59LmNhcmQtYm9keXtcclxuICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbiAgIFxyXG59XHJcbmlucHV0W3R5cGU9Y2hlY2tib3hdIHtcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEuNSk7XHJcbn1cclxuIl19 */\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"statistic-block block\\\"  [style.height]=\\\"'60px'\\\" [style.margin]=\\\" '0px' \\\">\\n      <form>\\n        <input type=\\\"number\\\" [style.width]=\\\"'60px'\\\" [style.background-color]=\\\"'blue'\\\" [(ngModel)]=\\\"ordersPerTimeSlice && ordersPerTimeSlice.orderPerSlice\\\"  id=\\\"orderPerSlice\\\"  name =\\\"orderPerSlice\\\" (change)=\\\"onSubmitOrdersPerTimeSlice()\\\"\\n               #orderPerSlice=\\\"ngModel\\\" >\\n        :\\n        <input type=\\\"number\\\" [style.width]=\\\"'40px'\\\" [style.background-color]=\\\"'blue'\\\" [(ngModel)]=\\\"ordersPerTimeSlice && ordersPerTimeSlice.timePeriod\\\"  id=\\\"timePeriod\\\"  name =\\\"timePeriod\\\" (change)=\\\"onSubmitOrdersPerTimeSlice()\\\"\\n               #timePeriod=\\\"ngModel\\\" > &nbsp;\\n        <!--GWClient<input type=\\\"checkbox\\\" [style.heigt]=\\\"'60px'\\\"[(ngModel)]=\\\"ordersPerTimeSlice && ordersPerTimeSlice.GWClient\\\"  name =\\\"GWClient\\\" (change)=\\\"onSubmitOrdersPerTimeSlice()\\\"  #GWClient=\\\"ngModel\\\">-->\\n      </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n <div class=\\\"card my-5\\\">\\n  <div class=\\\"card-body\\\">\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"ip\\\">IP</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user && user.ip\\\" class=\\\"form-control\\\" id=\\\"ip\\\"  name =\\\"ip\\\" (change)=\\\"onSubmit()\\\"\\n           #ip=\\\"ngModel\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"port\\\">Port Number</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.port\\\" class=\\\"form-control\\\" id=\\\"port\\\" value=8181 name=\\\"port\\\" placeholder=\\\"192.168.0.50\\\"\\n          required (change)=\\\"onSubmit()\\\" #port=\\\"ngModel\\\">\\n     </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"endpoint\\\">No of endpoints</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.endpoint\\\" class=\\\"form-control\\\" id=\\\"endpoint\\\" name=\\\"endpoint\\\" placeholder=\\\"No of endpoints\\\" value=1 (change)=\\\"onSubmit()\\\"\\n           #endpoint=\\\"ngModel\\\">\\n       </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"noOfOrders\\\">No of Orders</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.noOfOrders\\\" class=\\\"form-control\\\" id=\\\"noOfOrders\\\" name=\\\"noOfOrders\\\" placeholder=\\\"No of Orders\\\"\\n          required (change)=\\\"onSubmit()\\\" #noOfOrders=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"orderQty\\\">OrderQuantity</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.orderQty\\\" class=\\\"form-control\\\" id=\\\"orderQty\\\" name=\\\"orderQty\\\" placeholder=\\\"OrderParam Quantity\\\"\\n          required (change)=\\\"onSubmit()\\\" #noOfOrders=\\\"ngModel\\\">\\n      </div>\\n    \\n    </form>\\n  </div>\\n</div>\\n\"","import { Component,ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../_services/user-service.service';\nimport { User } from '../_model/user';\nimport {ResponseService} from '../response/response.service';\nimport {HttpClient, HttpHeaders, HttpParams,HttpEventType} from '@angular/common/http';\nimport {FileUploader} from 'ng2-file-upload';\nimport {OrdersPerTimeSlice} from '../_model/OrdersPerTimeSlice';\nimport {OrdersperTimeSliceService} from '../_services/ordersper-time-slice.service';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\n\nexport class UserFormComponent implements OnInit {\n\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  uploader: FileUploader;\n  user: User;\n  users: User[];\n  ordersPerTimeSlice : OrdersPerTimeSlice;\n\n\n  constructor(private route: ActivatedRoute, private router: Router, private userService: UserService,\n              private responseService: ResponseService, private ordersPerTimeSliceService : OrdersperTimeSliceService,\n              private http: HttpClient) {\n    this.user = new User();\n    this.ordersPerTimeSlice = new OrdersPerTimeSlice();\n    // this.user.ip = \"192.168.0.50\";\n    // this.user.port = 8181;\n    // this.user.endpoint = 10;\n    // this.user.noOfOrders = 100;\n    // this.user.orderQty = 1;\n\n    this.userService.findAll().subscribe(data => {\n      this.users = data;\n\n      this.user.noOfOrders = this.users[this.users.length-1].noOfOrders;\n      this.user.ip = this.users[this.users.length-1].ip;\n      this.user.port = this.users[this.users.length-1].port;\n      this.user.endpoint = this.users[this.users.length-1].endpoint;\n      this.user.orderQty = this.users[this.users.length-1].orderQty;\n\n      this.ordersPerTimeSlice.timePeriod = 1;\n      this.ordersPerTimeSlice.orderPerSlice = 700;\n\n    });\n\n  }\n\n  ngOnInit(): void {\n    const headers = [{name: 'Accept', value: 'application/json'}];\n    this.uploader = new FileUploader({url: '/api/files', autoUpload: true, headers: headers});\n    this.uploader.onCompleteAll = () => alert('File uploaded');\n  }\n\n  onSubmit= function(){\n    this.userService.save(this.user).subscribe(result => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n\n  onSubmitOrdersPerTimeSlice= function(){\n    console.log(this.ordersPerTimeSlice.GWClient);\n    this.ordersPerTimeSliceService.save(this.ordersPerTimeSlice).subscribe(result => this.gotoUserList());\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}