{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_model/AmendOrder.ts","webpack:///./src/app/_model/CancelOrder.ts","webpack:///./src/app/_model/OrdersPerTimeSlice.ts","webpack:///./src/app/_model/jms.ts","webpack:///./src/app/_model/orderParam.ts","webpack:///./src/app/_model/user.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/order-service.service.ts","webpack:///./src/app/_services/ordersper-time-slice.service.ts","webpack:///./src/app/_services/user-service.service.ts","webpack:///./src/app/amend/amend-order.service.ts","webpack:///./src/app/amend/amend.component.css","webpack:///./src/app/amend/amend.component.html","webpack:///./src/app/amend/amend.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/gateway-load-test/gateway-load-test.component.css","webpack:///./src/app/gateway-load-test/gateway-load-test.component.html","webpack:///./src/app/gateway-load-test/gateway-load-test.component.ts","webpack:///./src/app/jms/jms.component.css","webpack:///./src/app/jms/jms.component.html","webpack:///./src/app/jms/jms.component.ts","webpack:///./src/app/jms/jms.service.ts","webpack:///./src/app/layout/layout.component.css","webpack:///./src/app/layout/layout.component.html","webpack:///./src/app/layout/layout.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/params/params.component.css","webpack:///./src/app/params/params.component.html","webpack:///./src/app/params/params.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/response/response.component.css","webpack:///./src/app/response/response.component.html","webpack:///./src/app/response/response.component.ts","webpack:///./src/app/response/response.service.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class AmendOrder {\r\n  clOrdID :any;\r\n  orderQty :any;\r\n  price :any;\r\n}\r\n","export class CancelOrder {\r\n  clOrdID :any;\r\n\r\n}\r\n","export class OrdersPerTimeSlice {\r\n  orderPerSlice : number;\r\n  timePeriod : number;\r\n  GWClient : boolean;\r\n}\r\n","export class JMS {\r\n  jmsMessage : any;\r\n  exchange : any;\r\n}\r\n","export class OrderParam  {\r\n  orderChannel : any;\r\n  unReqId:any;\r\n  price :any;\r\n  tenantCode :any;\r\n   orderMode :any;\r\n  // clOrdID :any;\r\n  // origClOrdID :any;\r\n  // tradingAccountID :any;\r\n   type:any;\r\n  // quantity :any;\r\n  // customerID :any;\r\n   side :any;\r\n   exchange :any;\r\n  // cashAcntID :any;\r\n  // execBrokerID :any;\r\n   symbol :any;\r\n   marketCode :any;\r\n  // tIF :any;\r\n  // priceInstType :any;\r\n   dealerID :any;\r\n  // action :any;\r\n\r\n}\r\n","export class User {\r\n    ip:string;\r\n    port:number;\r\n    endpoint:number;\r\n    noOfOrders:number;\r\n    orderQty:number;\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthenticationService {\r\n  constructor() { }\r\n\r\n  authenticate(username, password) {\r\n    if ((username === \"user1\" && password === \"password\")|| (username === \"admin\" && password === \"mubasher\")) {\r\n      localStorage.setItem('username', username)\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    let client = localStorage.getItem('username')\r\n   // console.log(!(client === null))\r\n    return !(client === null)\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem('username')\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators'\r\nimport { Observable } from 'rxjs';\r\nimport {OrderParam} from '../_model/orderParam';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderServiceService {\r\n\r\n  private usersUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.usersUrl = '/users/params';\r\n  }\r\n\r\n  public findAll(): Observable<OrderParam[]> {\r\n    return this.http.get<OrderParam[]>(this.usersUrl);\r\n  }\r\n\r\n  public save(orderParam: OrderParam) {\r\n    return this.http.post<OrderParam>(this.usersUrl, orderParam);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {OrdersPerTimeSlice} from '../_model/OrdersPerTimeSlice';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersperTimeSliceService {\r\n\r\n  private usersUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.usersUrl = '/ordersPerTimeSlice';\r\n  }\r\n\r\n  public findAll(): Observable<OrdersPerTimeSlice[]> {\r\n    return this.http.get<OrdersPerTimeSlice[]>(this.usersUrl);\r\n  }\r\n\r\n  public save(ordersPerTimeSlice:OrdersPerTimeSlice) {\r\n    return this.http.post<OrdersPerTimeSlice>(this.usersUrl, ordersPerTimeSlice);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators'\r\nimport { Observable } from 'rxjs';\r\nimport {User} from '../_model/user';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  private usersUrl: string;\r\n\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.usersUrl = '/users/home';\r\n  }\r\n\r\n  public findAll(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.usersUrl);\r\n  }\r\n\r\n  public save(user: User) {\r\n    return this.http.post<User>(this.usersUrl, user);\r\n  }\r\n  public gotoUserList() {\r\n    this.router.navigate(['/users/home']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {AmendOrder} from '../_model/AmendOrder';\r\nimport {CancelOrder} from '../_model/CancelOrder';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AmendOrderService {\r\n  private amendOrdersUrl : string;\r\n  private cancelOrdersURL : string;\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.amendOrdersUrl = '/amendOrder';\r\n    this.cancelOrdersURL = '/cancelOrder';\r\n  }\r\n\r\n  public save(amendOrder: AmendOrder) {\r\n    return this.http.post<AmendOrder>(this.amendOrdersUrl, amendOrder);\r\n  }\r\n  public saveCancel(cancelOrder: CancelOrder) {\r\n    return this.http.post<CancelOrder>(this.cancelOrdersURL, cancelOrder);\r\n  }\r\n\r\n}\r\n","module.exports = \"#response{\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n#amend-container{\\r\\n  overflow-x: hidden;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hbWVuZC9hbWVuZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6ImFwcC9hbWVuZC9hbWVuZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3Jlc3BvbnNle1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbiNhbWVuZC1jb250YWluZXJ7XHJcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<!--&lt;!&ndash;<app-websocket></app-websocket>&ndash;&gt;-->\\r\\n<!--<header class=\\\"header\\\">-->\\r\\n  <!--<nav class=\\\"navbar navbar-expand-lg\\\" id=\\\"top-nav\\\">-->\\r\\n    <!--<div class=\\\"container-fluid d-flex align-items-center justify-content-between\\\">-->\\r\\n      <!--<div class=\\\"navbar-header\\\">-->\\r\\n        <!--&lt;!&ndash; Navbar Header&ndash;&gt;<a href=\\\"index.html\\\" class=\\\"navbar-brand\\\">-->\\r\\n        <!--<div class=\\\"brand-text brand-big visible text-uppercase\\\"><strong class=\\\"text-primary\\\">Order </strong><strong>system</strong></div>-->\\r\\n        <!--<div class=\\\"brand-text brand-sm\\\"><strong class=\\\"text-primary\\\">D</strong><strong>A</strong></div></a>-->\\r\\n        <!--&lt;!&ndash; Sidebar Toggle Btn&ndash;&gt;-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <!--<button class=\\\"sidebar-toggle\\\"><i class=\\\"fa fa-long-arrow-left\\\"></i></button>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n    <!--&lt;!&ndash;<div class=\\\"list-inline-item logout\\\"> <a *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\"> Login </a> </div>&ndash;&gt;-->\\r\\n    <!--&lt;!&ndash;<div class=\\\"list-inline-item logout\\\"><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">LogOut</a></div>&ndash;&gt;-->\\r\\n  <!--</nav>-->\\r\\n<!--</header>-->\\r\\n<!--<div class=\\\"d-flex align-items-stretch main-container\\\">-->\\r\\n  <!--<nav id=\\\"sidebar\\\" >-->\\r\\n    <!--&lt;!&ndash; Sidebar Header&ndash;&gt;-->\\r\\n\\r\\n    <!--&lt;!&ndash; Sidebar Navidation Menus&ndash;&gt;-->\\r\\n    <!--<ul class=\\\"list-unstyled\\\">-->\\r\\n      <!--<li><a routerLink=\\\"/users\\\">Create Orders </a></li>-->\\r\\n      <!--<li><a  routerLink=\\\"/Amend\\\"> Amend/Cancel Orders </a></li>-->\\r\\n      <!--&lt;!&ndash;<li><a href=\\\"charts.html\\\">Cancel Orders </a></li>&ndash;&gt;-->\\r\\n      <!--<li><a routerLink=\\\"/JMS\\\"> JMS Send</a></li>-->\\r\\n      <!--&lt;!&ndash;<li><a href=\\\"forms.html\\\"> amendOrder List </a></li>&ndash;&gt;-->\\r\\n\\r\\n    <!--</ul>-->\\r\\n  <!--</nav>-->\\r\\n  <div class=\\\"page-content\\\" id=\\\"amend-container\\\">\\r\\n    <div class=\\\"page-header\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <h2 class=\\\"h5 no-margin-bottom\\\">Amend/Cancel Orders</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"card my-5\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h2>Amend Order</h2><br>\\r\\n            <form (ngSubmit)=\\\"onSubmit()\\\" #amendOrderForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"clOrdID\\\" class=\\\"col-sm-3 form-control-label\\\">ClOrderID</label>\\r\\n                  <!--<label for=\\\"orderChannel\\\"></label>-->\\r\\n                  <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"amendOrder && amendOrder.clOrdID\\\" class=\\\"form-control\\\" id=\\\"clOrdID\\\"  name =\\\"clOrdID\\\"\\r\\n                           #clOrdID=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"orderQty\\\" class=\\\"col-sm-3 form-control-label\\\">Order Quantity</label>\\r\\n                  <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"number\\\" [(ngModel)]=\\\"amendOrder && amendOrder.orderQty\\\" class=\\\"form-control\\\" id=\\\"orderQty\\\"  name=\\\"orderQty\\\"\\r\\n                           required #orderQty=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"price\\\" class=\\\"col-sm-3 form-control-label\\\">Price</label>\\r\\n                  <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"amendOrder && amendOrder.price\\\" class=\\\"form-control\\\" id=\\\"price\\\"  name=\\\"price\\\"\\r\\n                           required #price=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <button type=\\\"submit\\\" [disabled]=\\\"!amendOrderForm.form.valid\\\" (click) =\\\"order()\\\" class=\\\"btn btn-info\\\">Configure</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"card my-5\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h2>Cancel Order</h2><br>\\r\\n            <form (ngSubmit)=\\\"onCancel()\\\" #cancelOrderForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"clOrdID\\\" class=\\\"col-sm-3 form-control-label\\\">ClOrderID</label>\\r\\n                  <!--<label for=\\\"orderChannel\\\"></label>-->\\r\\n                  <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"cancelOrder && cancelOrder.clOrdID\\\" class=\\\"form-control\\\" id=\\\"cancelOrder\\\"  name =\\\"clOrdID\\\"\\r\\n                           #clOrdID=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <button type=\\\"submit\\\" [disabled]=\\\"!cancelOrderForm.form.valid\\\" (click) =\\\"order()\\\" class=\\\"btn btn-info\\\">Configure</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <br><br>\\r\\n        <div class=\\\"statistic-block block\\\">\\r\\n          <div class=\\\"progress-details d-flex align-items-end justify-content-between\\\">\\r\\n            <div class=\\\"title\\\">\\r\\n              <!-- <div class=\\\"icon\\\"><i class=\\\"icon-user-1\\\"></i></div> -->\\r\\n              <strong>Responses</strong>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <!--<div id=\\\"scroll\\\" style=\\\"overflow-y:scroll; height:400px;\\\">-->\\r\\n        <div id=\\\"scroll\\\" style=\\\"overflow-y:scroll; height:400px;\\\">\\r\\n          <p-table [value]=\\\"messages\\\" >\\r\\n\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n              <tr>\\r\\n                <!--<th>Response</th>-->\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-message>\\r\\n              <tr>\\r\\n                <td>{{message}}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </p-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n<!--</div>-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AmendOrder} from '../_model/AmendOrder';\r\nimport {AmendOrderService} from './amend-order.service';\r\nimport {Router} from '@angular/router';\r\nimport {ResponseService} from '../response/response.service';\r\nimport {Subscription, timer} from 'rxjs';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {CancelOrder} from '../_model/CancelOrder';\r\n\r\n@Component({\r\n  selector: 'app-amend',\r\n  templateUrl: './amend.component.html',\r\n  styleUrls: ['./amend.component.css']\r\n})\r\nexport class AmendComponent implements OnInit {\r\n  amendOrder : AmendOrder;\r\n  cancelOrder : CancelOrder;\r\n  messages =[];\r\n  subscription2: Subscription;\r\n  constructor(private amendOrderService:AmendOrderService, private router: Router, private responseService: ResponseService) {\r\n    this.amendOrder = new AmendOrder();\r\n    this.cancelOrder = new CancelOrder();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onSubmit= function(){\r\n    this.amendOrderService.save(this.amendOrder).subscribe(result => this.gotoUserList());\r\n  }\r\n  onCancel= function(){\r\n    this.amendOrderService.saveCancel(this.cancelOrder).subscribe(result => this.gotoUserList());\r\n  }\r\n  gotoUserList() {\r\n    this.router.navigate(['/users/Amend']);\r\n  }\r\n\r\n  order(){\r\n    this.responseService.order().subscribe(params => {\r\n\r\n\r\n    });\r\n    this.subscription2 = timer(0, 1000).pipe(\r\n      switchMap(() => this.responseService.getLastHundredResponses())\r\n    ).subscribe( data =>{\r\n      this.messages =[];\r\n      for(let i=0;i< 50;i++){\r\n        this.messages.push(data[i]);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\nimport {ParamsComponent} from './params/params.component';\r\nimport {JMSComponent} from './jms/jms.component';\r\nimport {AmendComponent} from './amend/amend.component';\r\nimport {GatewayLoadTestComponent} from './gateway-load-test/gateway-load-test.component';\r\nimport {LayoutComponent} from './layout/layout.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'users', component: LayoutComponent,\r\n    children: [\r\n      {path: 'home', component: DashboardComponent},\r\n      {path: 'start', component: UserFormComponent},\r\n      {path: 'login', component: LoginComponent},\r\n      {path: 'register', component: RegisterComponent},\r\n      {path: 'logout', component: LogoutComponent},\r\n      {path: 'params', component: ParamsComponent},\r\n      {path: 'JMS', component: JMSComponent},\r\n      {path: 'Amend', component: AmendComponent},\r\n      {path: 'gateway-load-test', component: GatewayLoadTestComponent}\r\n    ]\r\n  },{path: '', component: LoginComponent}\r\n  ];\r\n \r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n\\r\\n.card bg-dark my-5{\\r\\n    padding: 0px;\\r\\n}.card-body{\\r\\n    padding-top: 0px;\\r\\n}.row{\\r\\n    padding-top: 0px;\\r\\n}.page-header{\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBO0lBQ0ksWUFBWTtBQUNoQixDQUFDO0lBQ0csZ0JBQWdCO0FBQ3BCLENBQUM7SUFDRyxnQkFBZ0I7QUFDcEIsQ0FBQztJQUNHLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbi5jYXJkIGJnLWRhcmsgbXktNXtcclxuICAgIHBhZGRpbmc6IDBweDtcclxufS5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nLXRvcDogMHB4O1xyXG59LnJvd3tcclxuICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbn0ucGFnZS1oZWFkZXJ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport {ResponseService} from './response/response.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'ang-app';\r\n  constructor(private responseService:ResponseService) {\r\n    this.responseService.connect().subscribe();\r\n  }\r\n\r\n  /** async getLastThousandResponses(){\r\n  while(1){\r\n    let size =this.queue.length;\r\n   \r\n    if(size>1000){\r\n      let start =size - 1000;\r\n      for(var i=0;i<=1000;i++){\r\n        this.modifiedQueue.push(this.queue[start+i]);\r\n      }\r\n     \r\n    }\r\n    delay(1000);\r\n  }\r\n}*/\r\n  // sendMessage(message){\r\n  //   this.stompClient.send(\"/app/send/message\" , {}, message);\r\n  //   $('#input').val('');\r\n  // }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {TableModule} from 'primeng/table';\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UserService } from './_services/user-service.service';\r\nimport { ResponseComponent } from './response/response.component';\r\nimport { VirtualScrollModule } from 'angular2-virtual-scroll';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport {FileUploadModule} from 'ng2-file-upload';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { ParamsComponent } from './params/params.component';\r\nimport { JMSComponent } from './jms/jms.component';\r\nimport { AmendComponent } from './amend/amend.component';\r\nimport { GatewayLoadTestComponent } from './gateway-load-test/gateway-load-test.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserFormComponent,\r\n    ResponseComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    RegisterComponent,\r\n    LogoutComponent,\r\n    ParamsComponent,\r\n    JMSComponent,\r\n    AmendComponent,\r\n    GatewayLoadTestComponent,\r\n    LayoutComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    VirtualScrollModule,\r\n    ScrollingModule,\r\n    InfiniteScrollModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FileUploadModule,\r\n    TableModule\r\n   \r\n  ],\r\n  providers: [UserService],\r\n  bootstrap: [AppComponent]\r\n \r\n  \r\n})\r\nexport class AppModule { }\r\n","module.exports = \"#dashboard-container{\\r\\n  overflow-x: hidden;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoiYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNkYXNoYm9hcmQtY29udGFpbmVye1xyXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufVxyXG4iXX0= */\"","module.exports = \"\\r\\n<div class=\\\"d-flex align-items-stretch\\\" id=\\\"dashboard-container\\\" >\\r\\n  <div class=\\\"page-content\\\">\\r\\n    <div class=\\\"page-header\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <h2 class=\\\"h5 no-margin-bottom\\\">Create Orders</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <app-user-form></app-user-form>\\r\\n        <app-params></app-params>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <app-response></app-response>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationService} from '../_services/authentication.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(public loginService:AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#gateway-form{\\r\\n  width: 40%;\\r\\n  margin-top: 0px !important;\\r\\n}\\r\\n\\r\\n#gateway-core{\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n#message-type{\\r\\n  width: 55%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9nYXRld2F5LWxvYWQtdGVzdC9nYXRld2F5LWxvYWQtdGVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFVBQVU7QUFDWiIsImZpbGUiOiJhcHAvZ2F0ZXdheS1sb2FkLXRlc3QvZ2F0ZXdheS1sb2FkLXRlc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNnYXRld2F5LWZvcm17XHJcbiAgd2lkdGg6IDQwJTtcclxuICBtYXJnaW4tdG9wOiAwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuI2dhdGV3YXktY29yZXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4jbWVzc2FnZS10eXBle1xyXG4gIHdpZHRoOiA1NSU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"page-content\\\" id=\\\"gateway-container\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <h2 class=\\\"h5 no-margin-bottom\\\">Gateway Load Testing</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"gateway-core\\\">\\r\\n\\r\\n    <div class=\\\"card my-5\\\" id=\\\"gateway-form\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"ip\\\">IP</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"user && user.ip\\\" class=\\\"form-control\\\" id=\\\"ip\\\"  name =\\\"ip\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   #ip=\\\"ngModel\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"port\\\">Port Number</label>\\r\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.port\\\" class=\\\"form-control\\\" id=\\\"port\\\" value=8181 name=\\\"port\\\" placeholder=\\\"192.168.0.50\\\"\\r\\n                   required (change)=\\\"onSubmit()\\\" #port=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"endpoint\\\">No of endpoints</label>\\r\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.endpoint\\\" class=\\\"form-control\\\" id=\\\"endpoint\\\" name=\\\"endpoint\\\" placeholder=\\\"No of endpoints\\\" value=1 (change)=\\\"onSubmit()\\\"\\r\\n                   #endpoint=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"noOfOrders\\\">No of Orders</label>\\r\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.noOfOrders\\\" class=\\\"form-control\\\" id=\\\"noOfOrders\\\" name=\\\"noOfOrders\\\" placeholder=\\\"No of Orders\\\"\\r\\n                   required (change)=\\\"onSubmit()\\\" #noOfOrders=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"orderQty\\\">OrderQuantity</label>\\r\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.orderQty\\\" class=\\\"form-control\\\" id=\\\"orderQty\\\" name=\\\"orderQty\\\" placeholder=\\\"OrderParam Quantity\\\"\\r\\n                   required (change)=\\\"onSubmit()\\\" #noOfOrders=\\\"ngModel\\\">\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card my5\\\"  id=\\\"message-type\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n        <li>Login</li>\\r\\n        <li>Buying Power</li>\\r\\n        <li>Account Summary</li>\\r\\n        <li>Order List</li>\\r\\n        <li>Order Search</li>\\r\\n        <li>Customer Search</li>\\r\\n        <li>Portfolio Details</li>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-gateway-load-test',\r\n  templateUrl: './gateway-load-test.component.html',\r\n  styleUrls: ['./gateway-load-test.component.css']\r\n})\r\nexport class GatewayLoadTestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#jms-container{\\r\\n  overflow-x: hidden;\\r\\n}\\r\\n\\r\\n#jms-core{\\r\\n  margin-left: 50px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9qbXMvam1zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoiYXBwL2ptcy9qbXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNqbXMtY29udGFpbmVye1xyXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufVxyXG5cclxuI2ptcy1jb3Jle1xyXG4gIG1hcmdpbi1sZWZ0OiA1MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<!--&lt;!&ndash;<app-websocket></app-websocket>&ndash;&gt;-->\\r\\n<!--<header class=\\\"header\\\">-->\\r\\n  <!--<nav class=\\\"navbar navbar-expand-lg\\\">-->\\r\\n    <!--<div class=\\\"container-fluid d-flex align-items-center justify-content-between\\\">-->\\r\\n      <!--<div class=\\\"navbar-header\\\">-->\\r\\n        <!--&lt;!&ndash; Navbar Header&ndash;&gt;<a href=\\\"index.html\\\" class=\\\"navbar-brand\\\">-->\\r\\n        <!--<div class=\\\"brand-text brand-big visible text-uppercase\\\"><strong class=\\\"text-primary\\\">Order </strong><strong>system</strong></div>-->\\r\\n        <!--<div class=\\\"brand-text brand-sm\\\"><strong class=\\\"text-primary\\\">D</strong><strong>A</strong></div></a>-->\\r\\n        <!--&lt;!&ndash; Sidebar Toggle Btn&ndash;&gt;-->\\r\\n        <!--<button class=\\\"sidebar-toggle\\\"><i class=\\\"fa fa-long-arrow-left\\\"></i></button>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n    <!--&lt;!&ndash;<div class=\\\"list-inline-item logout\\\"> <a *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\"> Login </a> </div>&ndash;&gt;-->\\r\\n    <!--&lt;!&ndash;<div class=\\\"list-inline-item logout\\\"><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">LogOut</a></div>&ndash;&gt;-->\\r\\n  <!--</nav>-->\\r\\n<!--</header>-->\\r\\n<!--<div class=\\\"d-flex align-items-stretch\\\" >-->\\r\\n  <!--<nav id=\\\"sidebar\\\" >-->\\r\\n    <!--&lt;!&ndash; Sidebar Header&ndash;&gt;-->\\r\\n    <!--&lt;!&ndash; Sidebar Navidation Menus&ndash;&gt;-->\\r\\n    <!--<ul class=\\\"list-unstyled\\\">-->\\r\\n      <!--<li><a  routerLink=\\\"/users\\\">Create Orders </a></li>-->\\r\\n      <!--<li><a  routerLink=\\\"/Amend\\\"> Amend/Cancel Orders </a></li>-->\\r\\n      <!--<li><a routerLink=\\\"/JMS\\\"> JMS Send</a></li>-->\\r\\n      <!--&lt;!&ndash;<li><a href=\\\"forms.html\\\"> OrderParam List </a></li>&ndash;&gt;-->\\r\\n    <!--</ul>-->\\r\\n  <!--</nav>-->\\r\\n  <div class=\\\"page-content\\\" id=\\\"jms-container\\\">\\r\\n    <div class=\\\"page-header\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <h2 class=\\\"h5 no-margin-bottom\\\">JMS Send</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"jms-core\\\">\\r\\n\\r\\n      <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\r\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #jmsForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" >\\r\\n        <div> <br>\\r\\n          <select id=\\\"select-type-basic\\\" [(ngModel)]=\\\"jms && jms.exchange\\\" name = \\\"exchange\\\" [value]= exchange_values[0] >\\r\\n            <option *ngFor=\\\"let exchange_type of exchange_values\\\">\\r\\n              {{exchange_type}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <label for=\\\"jmsMessage\\\" class=\\\"col-sm-3 form-control-label\\\"></label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"jms && jms.jmsMessage\\\" class=\\\"form-control\\\" name =\\\"jmsMessage\\\" id=\\\"jmsMessage\\\" #jmsMessage=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Send JMS</button>&nbsp;&nbsp;\\r\\n        <button (click)=\\\"clear()\\\" class=\\\"btn btn-secondary\\\">Clear</button>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n<!--</div>-->\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {JmsService} from './jms.service';\r\nimport {JMS} from '../_model/jms';\r\nimport {FileUploader} from 'ng2-file-upload';\r\n\r\n\r\n@Component({\r\n  selector: 'app-jms',\r\n  templateUrl: './jms.component.html',\r\n  styleUrls: ['./jms.component.css']\r\n})\r\nexport class JMSComponent implements OnInit {\r\n  jms:JMS;\r\n  uploader: FileUploader;\r\n  selectedOption: any = \"FormExchange\";\r\n  exchange_values: any = [\"FromExchange\",\"ToExchange\"];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private jmsService:JmsService) {\r\n    this.jms = new JMS();\r\n    this.jms.jmsMessage = \"TDWL\\u001C0\\u001C23041\\u001C8=FIXT.1.1\\u00019=115\\u000135=U29\\u000134=316\\u000152=20171228-08:06:49.594\\u000149=998\\u000156=080\\u000157=M0800001\\u00019742=U2815360521\\u00019730=0\\u00019701=180904000000263\\u00019729=1365245876\\u0001900=5\\u000110=124\\u0001\";\r\n    this.jms.exchange = \"FromExchange\";\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const headers = [{name: 'Accept', value: 'application/json'}];\r\n    this.uploader = new FileUploader({url: '/api/files/jms', autoUpload: true, headers: headers});\r\n    this.uploader.onCompleteAll = () => alert('File uploaded');\r\n  }\r\n\r\n  onSubmit= function(){\r\n    this.jmsService.save(this.jms).subscribe(result => this.gotoUserList());\r\n  }\r\n\r\n  gotoUserList() {\r\n    this.router.navigate(['/users/JMS']);\r\n  }\r\n\r\n  clear(){\r\n    this.jms.jmsMessage = null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {OrderParam} from '../_model/orderParam';\r\nimport {JMS} from '../_model/jms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JmsService {\r\n\r\n  private usersUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.usersUrl = '/jmsSend';\r\n  }\r\n\r\n  public findAll(): Observable<JMS[]> {\r\n    return this.http.get<JMS[]>(this.usersUrl);\r\n  }\r\n\r\n  public save(jms:JMS) {\r\n    return this.http.post<JMS>(this.usersUrl, jms);\r\n  }\r\n}\r\n","module.exports = \"#main-container{\\r\\n  display: inline-flex;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#core-container{\\r\\n  width: 88%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9sYXlvdXQvbGF5b3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBb0I7RUFDcEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6ImFwcC9sYXlvdXQvbGF5b3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFpbi1jb250YWluZXJ7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbiNjb3JlLWNvbnRhaW5lcntcclxuICB3aWR0aDogODglO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<!--<app-websocket></app-websocket>-->\\r\\n<header class=\\\"header\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg\\\">\\r\\n    <div class=\\\"container-fluid d-flex align-items-center justify-content-between\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <!-- Navbar Header--><a href=\\\"index.html\\\" class=\\\"navbar-brand\\\">\\r\\n        <div class=\\\"brand-text brand-big visible text-uppercase\\\"><strong class=\\\"text-primary\\\">Order </strong><strong>system</strong></div>\\r\\n        <div class=\\\"brand-text brand-sm\\\"><strong class=\\\"text-primary\\\">D</strong><strong>A</strong></div></a>\\r\\n        <!-- Sidebar Toggle Btn-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <button class=\\\"sidebar-toggle\\\"><i class=\\\"fa fa-long-arrow-left\\\"></i></button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"list-inline-item logout\\\"> <a *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\"> Login </a> </div>\\r\\n    <div class=\\\"list-inline-item logout\\\"><a *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"\\\" class=\\\"nav-link\\\">LogOut</a></div>\\r\\n  </nav>\\r\\n</header>\\r\\n\\r\\n<div id=\\\"main-container\\\">\\r\\n\\r\\n\\r\\n  <nav id=\\\"sidebar\\\" >\\r\\n    <!-- Sidebar Header-->\\r\\n\\r\\n    <!-- Sidebar Navidation Menus-->\\r\\n    <ul class=\\\"list-unstyled\\\">\\r\\n      <li><a routerLink=\\\"/users/home\\\">Create Orders </a></li>\\r\\n      <li><a  routerLink=\\\"/users/Amend\\\"> Amend/Cancel Orders </a></li>\\r\\n      <li><a routerLink=\\\"/users/JMS\\\"> JMS Send</a></li>\\r\\n      <li><a routerLink=\\\"/users/gateway-load-test\\\"> Gateway Load Testing</a></li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n  <div id=\\\"core-container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationService} from \"../_services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor(public loginService:AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"login-page\\\">\\r\\n  <div class=\\\"container d-flex align-items-center\\\">\\r\\n    <div class=\\\"form-holder has-shadow\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <!-- Logo & Information Panel-->\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"info d-flex align-items-center\\\">\\r\\n            <div class=\\\"content\\\">\\r\\n              <div class=\\\"logo\\\">\\r\\n                <h1>Test Client Order System</h1>\\r\\n              </div>\\r\\n              <!--<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>-->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Form Panel    -->\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form d-flex align-items-center\\\">\\r\\n            <div class=\\\"content\\\">\\r\\n              <form method=\\\"get\\\" class=\\\"form-validate mb-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <input id=\\\"login-username\\\" type=\\\"text\\\" name=\\\"username\\\" required data-msg=\\\"Please enter your username\\\" class=\\\"input-material\\\" [(ngModel)]=\\\"username\\\"/>\\r\\n                  <label for=\\\"login-username\\\" class=\\\"label-material\\\"></label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <input id=\\\"login-password\\\" type=\\\"password\\\" name=\\\"password\\\" required data-msg=\\\"Please enter your password\\\" class=\\\"input-material\\\" [(ngModel)]=\\\"password\\\">\\r\\n                  <label for=\\\"login-password\\\" class=\\\"label-material\\\"></label>\\r\\n                </div>\\r\\n                <button type=\\\"submit\\\" (click)=checkLogin() class=\\\"btn btn-primary\\\">Login</button>\\r\\n              </form><a href=\\\"#\\\" class=\\\"forgot-pass\\\">Forgot Password?</a><br><small>Do not have an account? </small><a href=\\\"/register\\\" class=\\\"signup\\\">Signup</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationService} from '../_services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username : any ;\r\n  password ='';\r\n  invalidLogin = false\r\n\r\n  constructor(private router: Router,\r\n              private loginservice: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  checkLogin() {\r\n    if (this.loginservice.authenticate(this.username, this.password)\r\n    ) {\r\n      this.router.navigate(['/users/home'])\r\n      this.invalidLogin = false\r\n    } else\r\n      this.invalidLogin = true\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbG9nb3V0L2xvZ291dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  logout works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationService} from '../_services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authentocationService: AuthenticationService,\r\n    private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authentocationService.logOut();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcGFyYW1zL3BhcmFtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div class=\\\"card my-5\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #orderParamForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"orderChannel\\\" class=\\\"col-sm-3 form-control-label\\\">Order Channel</label>\\r\\n          <!--<label for=\\\"orderChannel\\\"></label>-->\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.orderChannel\\\" class=\\\"form-control\\\" id=\\\"orderChannel\\\"  name =\\\"orderChannel\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   #orderChannel=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"price\\\" class=\\\"col-sm-3 form-control-label\\\">Price</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n           <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.price\\\" class=\\\"form-control\\\" id=\\\"price\\\"  name=\\\"price\\\" (change)=\\\"onSubmit()\\\"\\r\\n               required #stringPrice=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"type\\\" class=\\\"col-sm-3 form-control-label\\\">Type</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.type\\\" class=\\\"form-control\\\" id=\\\"type\\\"  name=\\\"type\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #type=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"symbol\\\" class=\\\"col-sm-3 form-control-label\\\">Symbol</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.symbol\\\" class=\\\"form-control\\\" id=\\\"symbol\\\"  name=\\\"symbol\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #symbol=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"tenantCode\\\" class=\\\"col-sm-3 form-control-label\\\">Tenant Code</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.tenantCode\\\" class=\\\"form-control\\\" id=\\\"tenantCode\\\"  name=\\\"tenantCode\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #tenantCode=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"marketCode\\\" class=\\\"col-sm-3 form-control-label\\\">Market Code</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.marketCode\\\" class=\\\"form-control\\\" id=\\\"marketCode\\\"  name=\\\"marketCode\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #marketCode=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"exchange\\\" class=\\\"col-sm-3 form-control-label\\\">Exchange</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.exchange\\\" class=\\\"form-control\\\" id=\\\"exchange\\\"  name=\\\"exchange\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #exchange=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"side\\\" class=\\\"col-sm-3 form-control-label\\\">Side</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"orderParam && orderParam.side\\\" class=\\\"form-control\\\" id=\\\"side\\\"  name=\\\"side\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #side=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"orderMode\\\" class=\\\"col-sm-3 form-control-label\\\">Order Mode</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"orderParam && orderParam.orderMode\\\" class=\\\"form-control\\\" id=\\\"orderMode\\\"  name=\\\"orderMode\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #orderMode=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"dealerID\\\" class=\\\"col-sm-3 form-control-label\\\">Dealer ID</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"orderParam && orderParam.dealerID\\\" class=\\\"form-control\\\" id=\\\"dealerID\\\"  name=\\\"dealerID\\\" (change)=\\\"onSubmit()\\\"\\r\\n                   required #dealerID=\\\"ngModel\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n\\r\\n          <button type=\\\"submit\\\" [disabled]=\\\"!orderParamForm.form.valid\\\" class=\\\"btn btn-info\\\">Configure</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {OrderParam} from '../_model/orderParam';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {OrderServiceService} from '../_services/order-service.service';\r\n\r\n@Component({\r\n  selector: 'app-params',\r\n  templateUrl: './params.component.html',\r\n  styleUrls: ['./params.component.css']\r\n})\r\nexport class ParamsComponent implements OnInit {\r\n  orderParam : OrderParam ;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private orderService: OrderServiceService) {\r\n    this.orderParam = new OrderParam();\r\n    //this.orderParam.unReqId = 1011;\r\n\r\n    this.orderParam.tenantCode =\"DEFAULT_TENANT\";\r\n    this.orderParam.symbol = \"1010\";\r\n    this.orderParam.exchange ='TDWL';\r\n    this.orderParam.price = 5.0;\r\n    this.orderParam.orderChannel =12;\r\n    this.orderParam.marketCode = \"ALL\";\r\n    this.orderParam.type =2;\r\n    this.orderParam.side = 1;\r\n    this.orderParam.orderMode = 0;\r\n    this.orderParam.dealerID ='1';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onSubmit();\r\n  }\r\n  onSubmit= function(){\r\n    this.orderService.save(this.orderParam).subscribe(result => this.gotoUserList());\r\n  }\r\n\r\n  gotoUserList() {\r\n    this.router.navigate(['/users/home']);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  register works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"body {\\r\\n    margin: 0;\\r\\n    font-size: 28px;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n  }\\r\\n  \\r\\n  .header {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    z-index: 1;\\r\\n    width: 100%;\\r\\n    background-color: #f1f1f1;\\r\\n  }\\r\\n  \\r\\n  .header h2 {\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .progress-container {\\r\\n    width: 100%;\\r\\n    height: 8px;\\r\\n    background: #ccc;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  .progress-bar {\\r\\n    height: 8px;\\r\\n    background: #4caf50;\\r\\n    width: 0%;\\r\\n  }\\r\\n  \\r\\n  .content {\\r\\n    padding: 100px 0;\\r\\n    margin: 50px auto 0 auto;\\r\\n    width: 80%;\\r\\n  }\\r\\n  \\r\\n  #response{\\r\\n    overflow-y: auto !important;\\r\\n  }\\r\\n  \\r\\n  input[type=checkbox] {\\r\\n  -webkit-transform: scale(1.5);\\r\\n          transform: scale(1.5);\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9yZXNwb25zZS9yZXNwb25zZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztJQUNULGVBQWU7SUFDZix5Q0FBeUM7RUFDM0M7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsTUFBTTtJQUNOLFVBQVU7SUFDVixXQUFXO0lBQ1gseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFdBQVc7SUFDWCxnQkFBZ0I7O0VBRWxCOztFQUVBO0lBQ0UsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsd0JBQXdCO0lBQ3hCLFVBQVU7RUFDWjs7RUFFQTtJQUNFLDJCQUEyQjtFQUM3Qjs7RUFFRjtFQUNFLDZCQUFxQjtVQUFyQixxQkFBcUI7QUFDdkIiLCJmaWxlIjoiYXBwL3Jlc3BvbnNlL3Jlc3BvbnNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG4gIH1cclxuICBcclxuICAuaGVhZGVyIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XHJcbiAgfVxyXG4gIFxyXG4gIC5oZWFkZXIgaDIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAucHJvZ3Jlc3MtY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG4gIC5wcm9ncmVzcy1iYXIge1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNGNhZjUwO1xyXG4gICAgd2lkdGg6IDAlO1xyXG4gIH1cclxuICBcclxuICAuY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiAxMDBweCAwO1xyXG4gICAgbWFyZ2luOiA1MHB4IGF1dG8gMCBhdXRvO1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICB9XHJcblxyXG4gICNyZXNwb25zZXtcclxuICAgIG92ZXJmbG93LXk6IGF1dG8gIWltcG9ydGFudDtcclxuICB9XHJcblxyXG5pbnB1dFt0eXBlPWNoZWNrYm94XSB7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjUpO1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<br>\\r\\n<div class=\\\"stats-3-block block d-flex\\\">\\r\\n        <div class=\\\"stats-3\\\"><strong class=\\\"d-block\\\">{{this.totalNoOfOrders}}</strong><span class=\\\"d-block\\\">Total Requests</span>\\r\\n        </div>\\r\\n        <div class=\\\"stats-3 d-flex justify-content-between text-center\\\">\\r\\n          <div class=\\\"item\\\"><strong class=\\\"d-block strong-sm\\\">{{this.responseTime}}</strong><span class=\\\"d-block span-sm\\\">Time(s)</span>\\r\\n            <!-- <div class=\\\"line\\\"></div><small>+246</small> -->\\r\\n          </div>\\r\\n          <div class=\\\"item\\\"><strong class=\\\"d-block strong-sm\\\">{{this.totalNoOfOrders-this.responseCount}}</strong><span class=\\\"d-block span-sm\\\">Pending</span>\\r\\n            <!-- <div class=\\\"line\\\"></div><small>+416</small> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n<div class=\\\"statistic-block block\\\">\\r\\n    <div class=\\\"progress-details d-flex align-items-end justify-content-between\\\">\\r\\n      <div class=\\\"title\\\">\\r\\n        <!-- <div class=\\\"icon\\\"><i class=\\\"icon-user-1\\\"></i></div> -->\\r\\n        <strong>Responses</strong>\\r\\n      </div>\\r\\n      <div class=\\\"number dashtext-1\\\">{{this.responseCount}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"progress progress-template\\\">\\r\\n        <div role=\\\"progressbar\\\" [style.width]=\\\"this.percentage + '%'\\\" aria-valuenow=\\\"55\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" class=\\\"progress-bar progress-bar-template dashbg-3\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n<button type=\\\"submit\\\" value=\\\"Click\\\" class=\\\"btn btn-info\\\" (click) =\\\"connect()\\\">Reconnect</button>&nbsp;&nbsp;\\r\\n<!--<button type=\\\"submit\\\" value=\\\"Click\\\" class=\\\"btn btn-info\\\" (click) =\\\"order()\\\">Place Order</button>&nbsp;&nbsp;-->\\r\\n<button type=\\\"submit\\\" value=\\\"Click\\\" class=\\\"btn btn-info\\\" (click) =\\\"clear()\\\">Clear</button>&nbsp;&nbsp;\\r\\n<button type=\\\"submit\\\" value=\\\"Click\\\" class=\\\"btn btn-info\\\" (click) =\\\"stop()\\\">Stop</button>&nbsp;&nbsp;\\r\\n<div><br></div>\\r\\n\\r\\n<!--GWClient<input type=\\\"checkbox\\\" [(ngModel)]=\\\"theCheckbox\\\"  data-md-icheck (change)=\\\"toggleVisibility($event)\\\"/>&nbsp;&nbsp;-->\\r\\n<div class=\\\"btn-group mr-3\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click) =sendConventionalOrders()>Place Orders</button>\\r\\n  <div class=\\\"btn-group\\\" ngbDropdown role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" ngbDropdownToggle (click)=\\\"sendTimedOrders()\\\">Timed Orders</button>\\r\\n    <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\r\\n      <button ngbDropdownItem>One</button>\\r\\n      <button ngbDropdownItem>Two</button>\\r\\n      <button ngbDropdownItem>Four!</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div id=\\\"response\\\" style=\\\"overflow-y:scroll; height:400px;\\\">\\r\\n<p-table [value]=\\\"messages\\\" >\\r\\n\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>Response</th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-message>\\r\\n      <tr>\\r\\n        <td>{{message}}</td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n\\r\\n  </p-table>\\r\\n</div>\\r\\n\"","import { AppComponent } from '../app.component';\r\nimport {Component, OnInit, Directive, Input, ViewChild} from '@angular/core';\r\nimport { ResponseService } from './response.service';\r\nimport { timer, Observable, Subject,Subscription,pipe } from 'rxjs';\r\nimport { switchMap, takeUntil, catchError } from 'rxjs/operators';\r\nimport { User } from '../_model/user';\r\nimport { UserService } from '../_services/user-service.service';\r\n\r\n@Component({\r\n  selector: 'app-response',\r\n  templateUrl: './response.component.html',\r\n  styleUrls: ['./response.component.css']\r\n})\r\nexport class ResponseComponent implements OnInit {\r\n  user : User;\r\n  users: User[];\r\n  subscription1: Subscription;\r\n  subscription2: Subscription;\r\n  subscription3: Subscription;\r\n  exchange_values: any = [\"FromExchange\",\"ToExchange\"];\r\n  statusText: string;\r\n  responseCount : number;\r\n  responseTime : any;\r\n  totalNoOfOrders : number;\r\n  percentage : any;\r\n  messages =[];\r\n  responseCountArray = [];\r\n  columnDefs = [\r\n    {headerName: 'Response', field: 'response'}\r\n    \r\n  ];\r\n  \r\n  rowData : any;\r\n  private fetchData$: Observable<string> = this.responseService.getReponseCount();\r\n  \r\n  constructor(private responseService:ResponseService,private userService: UserService) {\r\n    //this.getResponseCount();\r\n    this.user = new User();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.responseCountArray =[];\r\n    this.responseCount = 0;\r\n    this.responseTime = 0;\r\n    this.totalNoOfOrders  = 0;\r\n    this.userService.findAll().subscribe(data => {\r\n      this.users = data;\r\n\r\n      this.totalNoOfOrders = this.users[this.users.length-1].noOfOrders;\r\n\r\n    });\r\n    this.subscription1 = timer(0, 200).pipe(\r\n      switchMap(() => this.responseService.getReponseCount())\r\n    ).subscribe( data =>{\r\n      this.responseCount = data;\r\n      this.percentage = (this.responseCount / this.totalNoOfOrders)*100;\r\n      if(this.responseCountArray.length < 12){\r\n        this.responseCountArray.push(this.responseCount);\r\n      }\r\n      else{\r\n        this.responseCountArray.splice(0,1);\r\n        this.responseCountArray.push(this.responseCount);\r\n      }\r\n      if(this.responseCountArray[0] == this.responseCountArray[10] || this.responseCountArray[10] == this.totalNoOfOrders){\r\n\r\n        // this.subscription1.unsubscribe();\r\n        // this.subscription2.unsubscribe();\r\n        // this.subscription3.unsubscribe();\r\n      }\r\n    });\r\n\r\n    this.subscription2 = timer(0, 1000).pipe(\r\n      switchMap(() => this.responseService.getLastHundredResponses())\r\n    ).subscribe( data =>{\r\n\r\n      this.messages =[];\r\n      for(let i=0;i< 50;i++){\r\n        this.messages.push(data[i]);\r\n      }\r\n\r\n    });\r\n\r\n    this.subscription3 = timer(0, 1000).pipe(\r\n      switchMap(() => this.responseService.getReponseTime())\r\n    ).subscribe( data =>{\r\n      if(this.responseCount == 0){\r\n        this.responseTime = 0;\r\n      }\r\n      console.log(this.responseCount);\r\n      console.log(data);\r\n      this.responseTime = data[this.responseCount-1]/1000;\r\n    });\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n  order() {\r\n\r\n    this.responseCountArray =[];\r\n    this.responseCount = 0;\r\n    this.responseTime = 0;\r\n    this.userService.findAll().subscribe(data => {\r\n      this.users = data;\r\n    });\r\n    this.responseService.order().subscribe(params => {\r\n      \r\n      // this.populateRowData();\r\n    });\r\n    this.subscription1 = timer(0, 200).pipe(\r\n      switchMap(() => this.responseService.getReponseCount())\r\n    ).subscribe( data =>{\r\n      this.responseCount = data;\r\n      this.percentage = (this.responseCount / this.totalNoOfOrders)*100;\r\n      if(this.responseCountArray.length < 12){\r\n        this.responseCountArray.push(this.responseCount);\r\n      }\r\n      else{\r\n        this.responseCountArray.splice(0,1);\r\n        this.responseCountArray.push(this.responseCount);\r\n      }\r\n     if(this.responseCountArray[0] == this.responseCountArray[10] || this.responseCountArray[10] == this.totalNoOfOrders){\r\n\r\n      // this.subscription1.unsubscribe();\r\n      // this.subscription2.unsubscribe();\r\n      // this.subscription3.unsubscribe();\r\n      }\r\n      if(this.responseCount <= this.users[this.users.length-1].noOfOrders) {\r\n        this.totalNoOfOrders = this.users[this.users.length - 1].noOfOrders;\r\n      }\r\n      else{\r\n        this.totalNoOfOrders = this.responseCount;\r\n      }\r\n    });\r\n\r\n    this.subscription2 = timer(0, 1000).pipe(\r\n      switchMap(() => this.responseService.getLastHundredResponses())\r\n    ).subscribe( data =>{\r\n\r\n      this.messages =[];\r\n      for(let i=0;i< 50;i++){\r\n        this.messages.push(data[i]);\r\n      }\r\n\r\n    });\r\n\r\n    this.subscription3 = timer(0, 1000).pipe(\r\n      switchMap(() => this.responseService.getReponseTime())\r\n    ).subscribe( data =>{\r\n      if(this.responseCount == 0){\r\n        this.responseTime = 0;\r\n      }\r\n      this.responseTime = data[this.responseCount-1]/1000;\r\n      });\r\n    }\r\n\r\n\r\n    clear(){\r\n    this.messages = null;\r\n    this.subscription2.unsubscribe();\r\n  }\r\n\r\n  connect() {\r\n    this.responseService.connect().subscribe();\r\n  }\r\n  stop(){\r\n    this.responseService.stop().subscribe();\r\n    this.subscription1.unsubscribe();\r\n    this.subscription2.unsubscribe();\r\n    this.subscription3.unsubscribe();\r\n    // this.responseCount =0;\r\n    // this.responseTime =0;\r\n    this.totalNoOfOrders = this.responseCount;\r\n  }\r\n\r\n  sendTimedOrders(){\r\n    this.responseService.sendTimedOrders().subscribe();\r\n    //this.responseService.order().subscribe();\r\n    this.order();\r\n  }\r\n\r\n  sendConventionalOrders(){\r\n    this.responseService.sendConventionalOrders().subscribe();\r\n    this.order();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable,interval,Subscription} from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResponseService {\r\n  subscription: Subscription;\r\n  urlPrefix = '';\r\n \r\n  constructor(private  http: HttpClient) { \r\n    const source = interval(1000);\r\n  }\r\n\r\n   getReponseCount(): Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/ResponseCount');\r\n  }\r\n\r\n  getReponseTime(): Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/ResponseTime');\r\n }\r\n   \r\n  order(): Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/startOrder');\r\n  }\r\n\r\n  getLastHundredResponses(): Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/ResponseData');\r\n }\r\n\r\n connect(): Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/connect');\r\n  }\r\n\r\n  stop(): Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/stop');\r\n  }\r\n\r\n  sendTimedOrders():Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/sendTimedOrders');\r\n  }\r\n  sendConventionalOrders():Observable <any> {\r\n    return this.http.get(this.urlPrefix+'/sendConventionalOrders');\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"form{\\r\\n    padding-top: 0px;\\r\\n   \\r\\n    \\r\\n}\\r\\n.card bg-dark my-5{\\r\\n    padding: 0px;\\r\\n    \\r\\n}\\r\\n.card-body{\\r\\n    padding-top: 0px;\\r\\n   \\r\\n}\\r\\ninput[type=checkbox] {\\r\\n  -webkit-transform: scale(1.5);\\r\\n          transform: scale(1.5);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC91c2VyLWZvcm0vdXNlci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7OztBQUdwQjtBQUNBO0lBQ0ksWUFBWTs7QUFFaEI7QUFBQztJQUNHLGdCQUFnQjs7QUFFcEI7QUFDQTtFQUNFLDZCQUFxQjtVQUFyQixxQkFBcUI7QUFDdkIiLCJmaWxlIjoiYXBwL3VzZXItZm9ybS91c2VyLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm17XHJcbiAgICBwYWRkaW5nLXRvcDogMHB4O1xyXG4gICBcclxuICAgIFxyXG59XHJcbi5jYXJkIGJnLWRhcmsgbXktNXtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIFxyXG59LmNhcmQtYm9keXtcclxuICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbiAgIFxyXG59XHJcbmlucHV0W3R5cGU9Y2hlY2tib3hdIHtcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEuNSk7XHJcbn1cclxuIl19 */\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"statistic-block block\\\"  [style.height]=\\\"'60px'\\\" [style.margin]=\\\" '0px' \\\">\\r\\n      <form>\\r\\n        <input type=\\\"number\\\" [style.width]=\\\"'60px'\\\" [style.background-color]=\\\"'blue'\\\" [(ngModel)]=\\\"ordersPerTimeSlice && ordersPerTimeSlice.orderPerSlice\\\"  id=\\\"orderPerSlice\\\"  name =\\\"orderPerSlice\\\" (change)=\\\"onSubmitOrdersPerTimeSlice()\\\"\\r\\n               #orderPerSlice=\\\"ngModel\\\" >\\r\\n        :\\r\\n        <input type=\\\"number\\\" [style.width]=\\\"'40px'\\\" [style.background-color]=\\\"'blue'\\\" [(ngModel)]=\\\"ordersPerTimeSlice && ordersPerTimeSlice.timePeriod\\\"  id=\\\"timePeriod\\\"  name =\\\"timePeriod\\\" (change)=\\\"onSubmitOrdersPerTimeSlice()\\\"\\r\\n               #timePeriod=\\\"ngModel\\\" > &nbsp;\\r\\n        <!--GWClient<input type=\\\"checkbox\\\" [style.heigt]=\\\"'60px'\\\"[(ngModel)]=\\\"ordersPerTimeSlice && ordersPerTimeSlice.GWClient\\\"  name =\\\"GWClient\\\" (change)=\\\"onSubmitOrdersPerTimeSlice()\\\"  #GWClient=\\\"ngModel\\\">-->\\r\\n      </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n <div class=\\\"card my-5\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"ip\\\">IP</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user && user.ip\\\" class=\\\"form-control\\\" id=\\\"ip\\\"  name =\\\"ip\\\" (change)=\\\"onSubmit()\\\"\\r\\n           #ip=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"port\\\">Port Number</label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.port\\\" class=\\\"form-control\\\" id=\\\"port\\\" value=8181 name=\\\"port\\\" placeholder=\\\"192.168.0.50\\\"\\r\\n          required (change)=\\\"onSubmit()\\\" #port=\\\"ngModel\\\">\\r\\n     </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"endpoint\\\">No of endpoints</label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.endpoint\\\" class=\\\"form-control\\\" id=\\\"endpoint\\\" name=\\\"endpoint\\\" placeholder=\\\"No of endpoints\\\" value=1 (change)=\\\"onSubmit()\\\"\\r\\n           #endpoint=\\\"ngModel\\\">\\r\\n       </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"noOfOrders\\\">No of Orders</label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.noOfOrders\\\" class=\\\"form-control\\\" id=\\\"noOfOrders\\\" name=\\\"noOfOrders\\\" placeholder=\\\"No of Orders\\\"\\r\\n          required (change)=\\\"onSubmit()\\\" #noOfOrders=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"orderQty\\\">OrderQuantity</label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"user && user.orderQty\\\" class=\\\"form-control\\\" id=\\\"orderQty\\\" name=\\\"orderQty\\\" placeholder=\\\"OrderParam Quantity\\\"\\r\\n          required (change)=\\\"onSubmit()\\\" #noOfOrders=\\\"ngModel\\\">\\r\\n      </div>\\r\\n    \\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component,ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user-service.service';\r\nimport { User } from '../_model/user';\r\nimport {ResponseService} from '../response/response.service';\r\nimport {HttpClient, HttpHeaders, HttpParams,HttpEventType} from '@angular/common/http';\r\nimport {FileUploader} from 'ng2-file-upload';\r\nimport {OrdersPerTimeSlice} from '../_model/OrdersPerTimeSlice';\r\nimport {OrdersperTimeSliceService} from '../_services/ordersper-time-slice.service';\r\n\r\n@Component({\r\n  selector: 'app-user-form',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.css']\r\n})\r\n\r\nexport class UserFormComponent implements OnInit {\r\n\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  uploader: FileUploader;\r\n  user: User;\r\n  users: User[];\r\n  ordersPerTimeSlice : OrdersPerTimeSlice;\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private userService: UserService,\r\n              private responseService: ResponseService, private ordersPerTimeSliceService : OrdersperTimeSliceService,\r\n              private http: HttpClient) {\r\n    this.user = new User();\r\n    this.ordersPerTimeSlice = new OrdersPerTimeSlice();\r\n    // this.user.ip = \"192.168.0.50\";\r\n    // this.user.port = 8181;\r\n    // this.user.endpoint = 10;\r\n    // this.user.noOfOrders = 100;\r\n    // this.user.orderQty = 1;\r\n\r\n    this.userService.findAll().subscribe(data => {\r\n      this.users = data;\r\n\r\n      this.user.noOfOrders = this.users[this.users.length-1].noOfOrders;\r\n      this.user.ip = this.users[this.users.length-1].ip;\r\n      this.user.port = this.users[this.users.length-1].port;\r\n      this.user.endpoint = this.users[this.users.length-1].endpoint;\r\n      this.user.orderQty = this.users[this.users.length-1].orderQty;\r\n\r\n      this.ordersPerTimeSlice.timePeriod = 1;\r\n      this.ordersPerTimeSlice.orderPerSlice = 500;\r\n\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const headers = [{name: 'Accept', value: 'application/json'}];\r\n    this.uploader = new FileUploader({url: '/api/files', autoUpload: true, headers: headers});\r\n    this.uploader.onCompleteAll = () => alert('File uploaded');\r\n    this.responseService.connect().subscribe();\r\n  }\r\n\r\n  onSubmit= function(){\r\n    this.userService.save(this.user).subscribe(result => this.gotoUserList());\r\n  }\r\n\r\n  gotoUserList() {\r\n    this.router.navigate(['/users/home']);\r\n  }\r\n\r\n  onSubmitOrdersPerTimeSlice= function(){\r\n    console.log(this.ordersPerTimeSlice.GWClient);\r\n    this.ordersPerTimeSliceService.save(this.ordersPerTimeSlice).subscribe(result => this.gotoUserList());\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}